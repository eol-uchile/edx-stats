name: Docker Image CI

on:
  push:
    paths:
      - 'front/**'
      - 'back/**'

jobs:
  # JOB to run change detection
  changes:
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    # Set job outputs to values from filter step
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
    - uses: actions/checkout@v4

    - uses: dorny/paths-filter@v2.11.1
      id: filter
      with:
        filters: |
          backend:
            - 'back/**'
          frontend:
            - 'front/**'

  build-back:
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Build the Docker image
      run: docker build --target prod ./back --tag eoluchile/edx-stats-back:${GITHUB_SHA}

    - name: Run tests
      run: docker run eoluchile/edx-stats-back:${GITHUB_SHA} python manage.py test

    - name: Push to Github Container Registry
      if: github.ref == 'refs/heads/master'
      run: |
          echo "${CR_PAT}" | docker login ghcr.io -u eolito --password-stdin
          docker tag eoluchile/edx-stats-back:${GITHUB_SHA} ghcr.io/eol-uchile/edx-stats-back:${GITHUB_SHA}
          docker push ghcr.io/eol-uchile/edx-stats-back:${GITHUB_SHA}
      env:
        CR_PAT: ${{ secrets.CR_PAT }}

  build-front-staging:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Pull submodules
      run: git submodule update --init --recursive

    - name: Build dev
      run: docker build --target dev ./front --tag eoluchile/edx-front-test
    
    - name: Run Tests
      run: docker run eoluchile/edx-front-test npm test

    - name: Build the Docker image
      run: docker build --build-arg env_file=.env.staging ./front --tag eoluchile/edx-stats-front-staging:${GITHUB_SHA}

    - name: Push to Github Container Registry
      run: |
        echo "${CR_PAT}" | docker login ghcr.io -u eolito --password-stdin
        docker tag eoluchile/edx-stats-front-staging:${GITHUB_SHA} ghcr.io/eol-uchile/edx-stats-front-staging:${GITHUB_SHA}
        docker push ghcr.io/eol-uchile/edx-stats-front-staging:${GITHUB_SHA}
      env:
        CR_PAT: ${{ secrets.CR_PAT }}

  build-front-eol:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Pull submodules
      run: git submodule update --init --recursive

    - name: Build dev
      run: docker build --target dev ./front --tag eoluchile/edx-front-test
    
    - name: Run Tests
      run: docker run eoluchile/edx-front-test npm test

    - name: Build the Docker image
      run: docker build --build-arg env_file=.env.eol ./front --tag eoluchile/edx-stats-front-eol:${GITHUB_SHA}

    - name: Push to Github Container Registry
      run: |
        echo "${CR_PAT}" | docker login ghcr.io -u eolito --password-stdin
        docker tag eoluchile/edx-stats-front-eol:${GITHUB_SHA} ghcr.io/eol-uchile/edx-stats-front-eol:${GITHUB_SHA}
        docker push ghcr.io/eol-uchile/edx-stats-front-eol:${GITHUB_SHA}
      env:
        CR_PAT: ${{ secrets.CR_PAT }}
